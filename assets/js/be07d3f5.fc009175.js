"use strict";(self.webpackChunkflecks_docusaurus=self.webpackChunkflecks_docusaurus||[]).push([[1204],{1538:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>a});var i=n(5893),l=n(1151);const t={title:"Creating a fleck",description:"A fleck is a module but also so much more."},r=void 0,o={id:"creating-a-fleck",title:"Creating a fleck",description:"A fleck is a module but also so much more.",source:"@site/docs/creating-a-fleck.mdx",sourceDirName:".",slug:"/creating-a-fleck",permalink:"/flecks/docs/creating-a-fleck",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Creating a fleck",description:"A fleck is a module but also so much more."},sidebar:"flecksSidebar",previous:{title:"Configuration",permalink:"/flecks/docs/configuration"},next:{title:"Adding flecks",permalink:"/flecks/docs/adding-flecks"}},c={},a=[{value:"Your first fleck",id:"your-first-fleck",level:2},{value:"Create the fleck",id:"create-the-fleck",level:3},{value:"Aliasing for the win",id:"aliasing-for-the-win",level:3},{value:"Your first hook",id:"your-first-hook",level:3},{value:"flecks injection",id:"flecks-injection",level:3}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components},{Details:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:["If you are following along from the previous getting started\n",(0,i.jsx)(s.a,{href:"./configuration",children:"configuration page"}),", you have an application with 3 flecks:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"@flecks/build"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"@flecks/core"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"@flecks/server"})}),"\n"]}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("summary",{children:'About that "3 flecks" thing...'}),(0,i.jsxs)(s.p,{children:["Actually, your server application has ",(0,i.jsx)(s.strong,{children:"5 flecks"})," at this point:"]}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"@flecks/build"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"@flecks/build/server"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"@flecks/core"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"@flecks/core/server"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"@flecks/server"})}),"\n"]}),(0,i.jsxs)(s.p,{children:["flecks will load the ",(0,i.jsx)(s.code,{children:"[...]/server"})," fleck under any fleck that is loaded on the server. This is\nalso the case when using ",(0,i.jsx)(s.code,{children:"@flecks/web"})," which will automatically load ",(0,i.jsx)(s.code,{children:"[...]/client"})," flecks\nwhich are only loaded in the browser. We'll be exploring this specifically in the next section.\nIf you're intersted in diving deeper, see ",(0,i.jsx)(s.a,{href:"#todo",children:"the platforms concept page"}),"."]})]}),"\n",(0,i.jsx)(s.h2,{id:"your-first-fleck",children:"Your first fleck"}),"\n",(0,i.jsxs)(s.p,{children:["Let's make your website greet the user with a good ol' ",(0,i.jsx)(s.strong,{children:"hello world"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"To do this, you'll be creating your own little fleck. flecks also provides a built-in utility to\ncreate a fleck."}),"\n",(0,i.jsxs)(s.admonition,{title:"Your application is a monorepo by default",type:"note",children:[(0,i.jsxs)(s.p,{children:["You may have noticed that your little starter application has a ",(0,i.jsx)(s.code,{children:"packages"})," directory. By default,\nflecks structures your application as a monorepo."]}),(0,i.jsx)(s.p,{children:"This isn't any hard requirement, it's only a suggestion."})]}),"\n",(0,i.jsx)(s.h3,{id:"create-the-fleck",children:"Create the fleck"}),"\n",(0,i.jsx)(s.p,{children:"Let's create our little fleck:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"npx create-fleck say-hello\n"})}),"\n",(0,i.jsxs)(s.p,{children:["After some output, you'll find your new fleck at ",(0,i.jsx)(s.code,{children:"packages/say-hello"}),". Let's inspect our\n",(0,i.jsx)(s.code,{children:"build/flecks.yml"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yml",metastring:'title="build/flecks.yml"',children:"'@flecks/build': {}\n'@flecks/core':\n  id: 'hello-world'\n'@flecks/server': {}\n// highlight-next-line\n'@hello-world/say-hello:./packages/say-hello': {}\n"})}),"\n",(0,i.jsx)(s.h3,{id:"aliasing-for-the-win",children:"Aliasing for the win"}),"\n",(0,i.jsxs)(s.p,{children:["Notice there's a colon separating the path for this one. This is because this is an\n",(0,i.jsx)(s.a,{href:"#todo",children:"aliased fleck"}),". The part before the colon is the alias and the part after is the\npath to the package."]}),"\n",(0,i.jsxs)(s.p,{children:["By the way, your other application code can import using the alias (e.g.\n",(0,i.jsx)(s.code,{children:"require('@hello-world/say-hello');"}),")\n",(0,i.jsx)(s.a,{href:"https://webpack.js.org/configuration/resolve/#resolvealias",children:"as if it were a package"}),"."]}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsxs)("summary",{children:["Wait, my modules don't have to be in ",(0,i.jsx)("code",{children:"node_modules"}),"?"]}),(0,i.jsxs)(s.p,{children:["Nope! When you're developing applications, it can be real nice to\njust pull in local source \"packages\". If you're wondering how this works, see\n",(0,i.jsx)(s.a,{href:"#todo",children:"the alias concept page"}),"."]}),(0,i.jsx)(s.p,{children:"That being said, sharing your packages on npm is a cool thing to do, so be rad and share your\nawesome flecks with the rest of us!"}),(0,i.jsxs)(s.admonition,{type:"warning",children:[(0,i.jsxs)(s.p,{children:["You probably shouldn't do things like name an alias the same thing as a package that actually\nexists in your ",(0,i.jsx)(s.code,{children:"node_modules"})," directory. This is mitigated if you use the default monorepo\nstructure (unless your application name is identical to a monorepo organization that already\nexists on ",(0,i.jsx)(s.code,{children:"npm"}),": don't do that)."]}),(0,i.jsxs)(s.p,{children:["If you'd like to help define what happens in these edge cases you could\nalways ",(0,i.jsx)(s.a,{href:"https://github.com/cha0s/flecks/compare",children:"submit a pull request"}),". ","\ud83d\ude04"]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"your-first-hook",children:"Your first hook"}),"\n",(0,i.jsxs)(s.p,{children:["There is a source file at ",(0,i.jsx)(s.code,{children:"packages/say-hello/src/index.js"})," but for now it's empty. Let's fill it\nout a bit:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",metastring:'title="packages/say-hello/src/index.js"',children:"export const hooks = {\n  '@flecks/server.up': async () => {\n    process.stdout.write('  hello server\\n');\n  },\n};\n"})}),"\n",(0,i.jsx)(s.p,{children:"Now, restart your application:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,i.jsx)(s.p,{children:"You will be greeted by a line in the output:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-terminal",children:"  hello server\n"})}),"\n",(0,i.jsx)(s.h3,{id:"flecks-injection",children:"flecks injection"}),"\n",(0,i.jsxs)(s.p,{children:["Hook implementations may receive arguments. After any arguments, the ",(0,i.jsx)(s.code,{children:"flecks"})," instance is always\npassed."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"@flecks/server.up"})," doesn't pass any arguments, so the ",(0,i.jsx)(s.code,{children:"flecks"})," instance is the first argument.\nLet's see how to use the instance to read some configuration:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",metastring:'title="packages/say-hello/src/index.js"',children:"export const hooks = {\n  '@flecks/server.up': async (flecks) => {\n    const {id} = flecks.get('@flecks/core');\n    process.stdout.write(`  hello server: ID ${id}\\n`);\n  },\n};\n"})}),"\n",(0,i.jsx)(s.p,{children:"This time, you will see:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-terminal",children:"  hello server: ID hello-world\n"})}),"\n",(0,i.jsx)(s.admonition,{title:"Still with us?",type:"note",children:(0,i.jsxs)(s.p,{children:["...or whatever your application's ID is. We're assuming you're following along from\n",(0,i.jsx)(s.a,{href:"./configuration",children:"the configuration page"}),"."]})}),"\n",(0,i.jsx)(s.p,{children:"Next, we'll add and interact with some of the flecks shipped by default."})]})}function h(e={}){const{wrapper:s}={...(0,l.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>o,a:()=>r});var i=n(7294);const l={},t=i.createContext(l);function r(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);