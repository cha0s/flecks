"use strict";(self.webpackChunkflecks_docusaurus=self.webpackChunkflecks_docusaurus||[]).push([[2873],{2494:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>a});var r=o(5893),c=o(1151);const i={title:"Docker",description:"Spin up containers and orchestrate your production application."},s=void 0,t={id:"docker",title:"Docker",description:"Spin up containers and orchestrate your production application.",source:"@site/docs/docker.mdx",sourceDirName:".",slug:"/docker",permalink:"/flecks/docs/docker",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Docker",description:"Spin up containers and orchestrate your production application."},sidebar:"flecksSidebar",previous:{title:"Database",permalink:"/flecks/docs/database"},next:{title:"Sockets",permalink:"/flecks/docs/sockets"}},d={},a=[{value:"Spin up containers",id:"spin-up-containers",level:2},{value:"Build and orchestrate for production",id:"build-and-orchestrate-for-production",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,c.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Integrate your application with ",(0,r.jsx)(n.a,{href:"https://www.docker.com/",children:"Docker"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"spin-up-containers",children:"Spin up containers"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"@flecks/docker"})," can spin up containers for rapid development."]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["The user running the server must have Docker privileges.\nSee: ",(0,r.jsx)(n.a,{href:"https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user",children:"https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"})]})}),"\n",(0,r.jsxs)(n.p,{children:["Adding ",(0,r.jsx)(n.code,{children:"@flecks/docker"})," to your ",(0,r.jsx)(n.code,{children:"build/flecks.yml"})," will discover and spin up containers in\ndevelopment. For instance, if you have ",(0,r.jsx)(n.code,{children:"@flecks/db"})," in your ",(0,r.jsx)(n.code,{children:"build/flecks.yml"}),", ",(0,r.jsx)(n.code,{children:"@flecks/docker"}),"\nwill automatically spin up a database."]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.strong,{children:"Implementations"})," under\n",(0,r.jsxs)(n.a,{href:"./flecks/hooks#flecksdockercontainers",children:["the ",(0,r.jsx)(n.code,{children:"@flecks/docker.containers"})," documentation"]})," to find\nimplementations of Docker containers."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"@flecks/docker"})," runs your container in a manner that outlives your application. If you kill your\napplication and then run:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker ps\n"})}),"\n",(0,r.jsx)(n.p,{children:"You will see lines for your containers looking something like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'CONTAINER ID   IMAGE     COMMAND                 CREATED        STATUS        PORTS                                      NAMES\n<SOME_ID>      postgres  "docker-entrypoint.s\u2026"  5 minutes ago  Up 5 minutes  0.0.0.0:5432->5432/tcp, :::5432->5432/tcp  [FLECKS_ID]_sequelize\n'})}),"\n",(0,r.jsx)(n.admonition,{title:"What's in a name?",type:"tip",children:(0,r.jsxs)(n.p,{children:["The container name is based off of ",(0,r.jsx)(n.code,{children:"@flecks/core.id"})," which by default is ",(0,r.jsx)(n.code,{children:"flecks"}),". If you change\nyour application's ID, the container name will be different!"]})}),"\n",(0,r.jsxs)(n.p,{children:["You'll see under the ",(0,r.jsx)(n.code,{children:"NAMES"})," column heading, there is an entry called ",(0,r.jsx)(n.code,{children:"[FLECKS_ID]_sequelize"}),". That's\nour database container! You can always"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker kill [FLECKS_ID]_sequelize\n"})}),"\n",(0,r.jsx)(n.p,{children:"to free up any resources being used. flecks keeps the containers running so that you get a nice\nfast application start."}),"\n",(0,r.jsx)(n.h2,{id:"build-and-orchestrate-for-production",children:"Build and orchestrate for production"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"@flecks/docker"})," hooks the server build to include a ",(0,r.jsx)(n.code,{children:"Dockerfile"})," and a ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," to\nboth build and orchestrate your application with Docker."]}),"\n",(0,r.jsxs)(n.p,{children:["By default, these will be found at ",(0,r.jsx)(n.code,{children:"dist/server"})," after building your application."]}),"\n",(0,r.jsx)(n.p,{children:"After building, the application could be composed in Docker Compose using the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"docker-compose -f dist/server/docker-compose.yml up\n"})})]})}function p(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>t,a:()=>s});var r=o(7294);const c={},i=r.createContext(c);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);