"use strict";(self.webpackChunkflecks_docusaurus=self.webpackChunkflecks_docusaurus||[]).push([[1825],{5019:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var o=s(5893),r=s(1151);const t={title:"Gathering and Providing",description:"Easily gather and provide things like database models, socket packets, etc."},i=void 0,c={id:"gathering",title:"Gathering and Providing",description:"Easily gather and provide things like database models, socket packets, etc.",source:"@site/docs/gathering.mdx",sourceDirName:".",slug:"/gathering",permalink:"/flecks/docs/gathering",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Gathering and Providing",description:"Easily gather and provide things like database models, socket packets, etc."},sidebar:"flecksSidebar",previous:{title:"Testing",permalink:"/flecks/docs/testing"},next:{title:"Ordering",permalink:"/flecks/docs/ordering"}},d={},l=[{value:"Basics",id:"basics",level:2},{value:"IDs and types",id:"ids-and-types",level:3},{value:"Options",id:"options",level:3},{value:"Providing through <code>Flecks.provide(context, options)</code>",id:"providing-through-flecksprovidecontext-options",level:3},{value:"Options",id:"options-1",level:4},{value:"Decorating with <code>Flecks.decorate(context, options)</code>",id:"decorating-with-flecksdecoratecontext-options",level:3},{value:"Options",id:"options-2",level:4}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Gathering is useful when your fleck defines some sort of specification class, and then expects its\nsibling flecks to extend it. Some common examples:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Database models, defined through ",(0,o.jsx)(n.code,{children:"@flecks/db/server.models"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Socket packets, defined through ",(0,o.jsx)(n.code,{children:"@flecks/socket.packets"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"basics",children:"Basics"}),"\n",(0,o.jsxs)(n.p,{children:["One constraint of using ",(0,o.jsx)(n.code,{children:"flecks.gather()"})," is that whatever you are gathering must be able to be\nextended as a class. You can't ",(0,o.jsx)(n.code,{children:"flecks.gather()"})," plain objects, numbers, strings... you get the\nidea."]}),"\n",(0,o.jsx)(n.p,{children:"The most basic usage:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const Gathered = flecks.gather('@my/fleck.whatever');\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Suppose the flecks implementing the hook ",(0,o.jsx)(n.code,{children:"@my/fleck.whatever"})," above returned two classes, ",(0,o.jsx)(n.code,{children:"Foo"})," and\n",(0,o.jsx)(n.code,{children:"Bar"}),". In this case, ",(0,o.jsx)(n.code,{children:"Gathered"})," would be structured as:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"import {ById, ByType} from '@flecks/core';\n\nconst Gathered = {\n  1: Bar,\n  2: Foo,\n  Bar,\n  Foo,\n  [ById]: {\n    1: Bar,\n    2: Foo,\n  },\n  [ByType]: {\n    Bar,\n    Foo,\n  },\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"ids-and-types",children:"IDs and types"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"flecks.gather()"})," gives each of your classes a numeric (nonzero) ID as well as a type name. It also\nmerges all numeric keys and type labels together into the result, so ",(0,o.jsx)(n.code,{children:"Gathered[1] === Gathered.Bar"}),"\nwould evaluate to ",(0,o.jsx)(n.code,{children:"true"})," in the example above."]}),"\n",(0,o.jsxs)(n.p,{children:["The symbol keys ",(0,o.jsx)(n.code,{children:"ById"})," and ",(0,o.jsx)(n.code,{children:"ByType"})," are useful if you need to iterate over ",(0,o.jsx)(n.em,{children:"either"})," all IDs or all\ntypes. Since the numeric IDs and types are merged, iterating over the entire ",(0,o.jsx)(n.code,{children:"Gathered"})," object\nwould otherwise result in duplicates."]}),"\n",(0,o.jsxs)(n.p,{children:["Each class gathered by ",(0,o.jsx)(n.code,{children:"flecks.gather()"})," will be extended with two properties by default: ",(0,o.jsx)(n.code,{children:"id"}),"\nand ",(0,o.jsx)(n.code,{children:"type"}),". These correspond to the ID and type referenced above."]}),"\n",(0,o.jsx)(n.p,{children:"Following from the example above:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const foo = new Gathered.Foo();\nassert(foo.id === 2);\nassert(foo.type === 'Foo');\n"})}),"\n",(0,o.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"flecks.gather()"})," also supports some options:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"{\n  // The property added when extending the class to return the numeric ID.\n  idProperty = 'id',\n  // The property added when extending the class to return the type.\n  typeProperty = 'type',\n  // A function called with the `Gathered` object to allow checking validity.\n  check = () => {},\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["As an example, when ",(0,o.jsx)(n.code,{children:"@flecks/db/server"})," gathers models, ",(0,o.jsx)(n.code,{children:"typeProperty"})," is set to ",(0,o.jsx)(n.code,{children:"name"}),", because\nSequelize requires its model classes to have a unique ",(0,o.jsx)(n.code,{children:"name"})," property."]}),"\n",(0,o.jsxs)(n.admonition,{title:"Platform order",type:"warning",children:[(0,o.jsxs)(n.p,{children:["The numeric IDs are useful for efficient serialization between the client and server, but ",(0,o.jsxs)(n.strong,{children:["if you\nare using this property, ensure that ",(0,o.jsx)(n.code,{children:"flecks.gather()"})," is called equivalently on both the client\nand the server"]}),"."]}),(0,o.jsxs)(n.p,{children:["If you have serializable ",(0,o.jsx)(n.code,{children:"Gathered"}),"s (e.g. Socket packets), they should be invoked\nand defined in ",(0,o.jsx)(n.code,{children:"@your/fleck"}),", and not in e.g. ",(0,o.jsx)(n.code,{children:"@your/fleck/server"}),", so that they are included for\nevery platform. If this is not possible, make extra sure to implement them consistently across\nplatforms."]})]}),"\n",(0,o.jsxs)(n.h3,{id:"providing-through-flecksprovidecontext-options",children:["Providing through ",(0,o.jsx)(n.code,{children:"Flecks.provide(context, options)"})]}),"\n",(0,o.jsxs)(n.p,{children:["Complementary to above, ",(0,o.jsx)(n.code,{children:"Flecks.provide()"})," helps you to ergonomically provide your\nflecks' implementations to a gather hook."]}),"\n",(0,o.jsxs)(n.p,{children:["Here's an example of how you could manually provide ",(0,o.jsx)(n.code,{children:"@flecks/db/server.models"})," in your own fleck:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",metastring:'title="src/index.js"',children:"import SomeModel from './models/some-model';\nimport AnotherModel from './models/another-model';\n\nexport const hooks = {\n  '@flecks/db/server.models': () => ({\n    SomeModel,\n    AnotherModel,\n  }),\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["It will become a lot of typing to keep adding new models over time. ",(0,o.jsx)(n.code,{children:"Flecks.provide()"})," exists to\nreduce this maintenance burden for you."]}),"\n",(0,o.jsxs)(n.p,{children:["Webpack provides an API called\n",(0,o.jsx)(n.a,{href:"https://webpack.js.org/guides/dependency-management/#requirecontext",children:"require.context"})," which\nimports many files with a pattern."]}),"\n",(0,o.jsx)(n.p,{children:"Supposing our fleck is structured like so:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"src\n\u251c\u2500index.js\n\u2514\u2500models/\n  \u251c\u2500 some-model.js\n  \u2514\u2500 another-model.js\n"})}),"\n",(0,o.jsxs)(n.p,{children:["then, this ",(0,o.jsx)(n.code,{children:"src/index.js"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",metastring:'title="src/index.js"',children:"import {Flecks} from '@flecks/core';\n\nexport const hooks = {\n  '@flecks/db/server.models': Flecks.provide(require.context('./models')),\n};\n"})}),"\n",(0,o.jsxs)(n.p,{children:["is ",(0,o.jsx)(n.em,{children:"exactly equivalent"})," to the ",(0,o.jsx)(n.code,{children:"src/index.js"})," above. By default, ",(0,o.jsx)(n.code,{children:"Flecks.provide()"})," ",(0,o.jsx)(n.em,{children:"CamelCase"}),"s\nthe paths, so e.g. ",(0,o.jsx)(n.code,{children:"some-model"})," becomes ",(0,o.jsx)(n.code,{children:"SomeModel"}),"."]}),"\n",(0,o.jsx)(n.h4,{id:"options-1",children:"Options"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"Flecks.provide()"})," also supports some options:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"{\n  // Whether to invoke the default export as a function.\n  invoke = true,\n  // The transformation used on the path.\n  transformer = camelCase,\n}\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Batteries included",type:"tip",children:(0,o.jsxs)(n.p,{children:["There is no hard requirement to use ",(0,o.jsx)(n.code,{children:"Flecks.provide()"}),", it is merely a convenience."]})}),"\n",(0,o.jsxs)(n.h3,{id:"decorating-with-flecksdecoratecontext-options",children:["Decorating with ",(0,o.jsx)(n.code,{children:"Flecks.decorate(context, options)"})]}),"\n",(0,o.jsxs)(n.p,{children:["When a Model (or any other) is gathered as above, an implicit hook is called: ",(0,o.jsx)(n.code,{children:"${hook}.decorate"}),".\nThis allows other flecks to decorate whatever has been gathered:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"export const hooks = {\n  '@flecks/db/server.models.decorate': (Models) => {\n    return {\n      ...Models,\n      User: class extends Models.User {\n\n        // Let's mix in some logging...\n        constructor(...args) {\n          super(...args);\n          console.log ('Another user decorated!');\n        }\n\n      },\n    };\n  },\n};\n"})}),"\n",(0,o.jsx)(n.p,{children:"As with above, there exists an API for making the maintenance of decorators more ergonomic."}),"\n",(0,o.jsx)(n.p,{children:"Supposing our fleck is structured like so:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"src\n\u251c\u2500index.js\n\u2514\u2500models/\n  \u2514\u2500 decorators/\n     \u2514\u2500 user.js\n"})}),"\n",(0,o.jsxs)(n.p,{children:["and supposing that ",(0,o.jsx)(n.code,{children:"src/models/decorators/user.js"})," is written like so:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",metastring:'title="src/models/decorators/user.js"',children:"export default (User) => {\n  return class extends User {\n\n    // Let's mix in some logging...\n    constructor(...args) {\n      super(...args);\n      console.log ('Another user decorated!');\n    }\n\n  };\n};\n"})}),"\n",(0,o.jsxs)(n.p,{children:["then, this ",(0,o.jsx)(n.code,{children:"src/index.js"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",metastring:'title="src/index.js"',children:"import {Flecks} from '@flecks/core';\n\nexport const hooks = {\n  '@flecks/db/server.models.decorate': (\n    Flecks.decorate(require.context('./models/decorators'))\n  ),\n};\n"})}),"\n",(0,o.jsxs)(n.p,{children:["is ",(0,o.jsx)(n.em,{children:"exactly equivalent"})," to the ",(0,o.jsx)(n.code,{children:"src/index.js"})," above."]}),"\n",(0,o.jsx)(n.admonition,{title:"Be aware of your context",type:"warning",children:(0,o.jsxs)(n.p,{children:["If you have defined models in ",(0,o.jsx)(n.code,{children:"src/models"})," and model decorators in ",(0,o.jsx)(n.code,{children:"src/model/decorators"})," as\nillustrated, be mindful of how\n",(0,o.jsx)(n.a,{href:"https://webpack.js.org/guides/dependency-management/#requirecontext",children:"require.context"}),"\nis gathering your files: particularly the ",(0,o.jsx)(n.code,{children:"useSubdirectories"})," flag which is ",(0,o.jsx)(n.code,{children:"true"})," by default."]})}),"\n",(0,o.jsx)(n.h4,{id:"options-2",children:"Options"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"Flecks.decorate()"})," also supports some options:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"{\n  // The transformation used on the class path.\n  transformer = camelCase,\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Decorator hooks are ",(0,o.jsx)(n.a,{href:"./ordering",children:"orderable"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>i});var o=s(7294);const r={},t=o.createContext(r);function i(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);